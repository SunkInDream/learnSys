{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Card,Table,Progress,Tabs,Empty,Tag,Timeline,Button}from'antd';import{ClockCircleOutlined,CheckCircleOutlined,CloseCircleOutlined}from'@ant-design/icons';import moment from'moment';import'./StudyPlan.less';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const{TabPane}=Tabs;const StudyPlan=()=>{// 从 localStorage 获取当前计划和历史计划\nconst getStoredPlans=()=>{const stored=localStorage.getItem('studyPlans');return stored?JSON.parse(stored):{currentPlan:{planId:'1',createTime:'2024-03-20',plans:[{key:'1',date:'2024-03-20',subject:'数学',content:'函数与导数',status:'已完成',completion:100},{key:'2',date:'2024-03-21',subject:'物理',content:'力学基础',status:'进行中',completion:60}]},historyPlans:[]};};const[plans,setPlans]=useState(getStoredPlans);// 当计划更新时保存到 localStorage\nuseEffect(()=>{localStorage.setItem('studyPlans',JSON.stringify(plans));},[plans]);// 更新当前计划（模拟接收新计划）\nconst updateCurrentPlan=newPlan=>{// 将当前计划移到历史记录\nconst updatedHistoryPlans=[plans.currentPlan,...plans.historyPlans].slice(0,5);setPlans({currentPlan:{planId:Date.now().toString(),createTime:moment().format('YYYY-MM-DD'),plans:newPlan},historyPlans:updatedHistoryPlans});};const columns=[{title:'日期',dataIndex:'date',key:'date'},{title:'科目',dataIndex:'subject',key:'subject',render:text=>/*#__PURE__*/_jsx(Tag,{color:\"blue\",children:text})},{title:'学习内容',dataIndex:'content',key:'content'},{title:'状态',dataIndex:'status',key:'status',render:status=>{let color=status==='已完成'?'success':status==='进行中'?'processing':'default';return/*#__PURE__*/_jsx(Tag,{color:color,children:status});}},{title:'完成度',dataIndex:'completion',key:'completion',render:completion=>/*#__PURE__*/_jsx(Progress,{percent:completion,size:\"small\"})}];// 渲染历史计划\nconst renderHistoryPlan=plan=>{const avgCompletion=plan.plans.reduce((acc,curr)=>acc+curr.completion,0)/plan.plans.length;return/*#__PURE__*/_jsx(Card,{style:{marginBottom:16},title:\"\\u521B\\u5EFA\\u65E5\\u671F\\uFF1A\".concat(plan.createTime),extra:/*#__PURE__*/_jsxs(Tag,{color:avgCompletion===100?'success':'warning',children:[\"\\u5B8C\\u6210\\u5EA6\\uFF1A\",avgCompletion.toFixed(1),\"%\"]}),children:/*#__PURE__*/_jsx(Timeline,{children:plan.plans.map(item=>/*#__PURE__*/_jsx(Timeline.Item,{color:item.status==='已完成'?'green':'blue',dot:item.status==='已完成'?/*#__PURE__*/_jsx(CheckCircleOutlined,{}):/*#__PURE__*/_jsx(ClockCircleOutlined,{}),children:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Tag,{color:\"blue\",children:item.subject}),item.content]}),/*#__PURE__*/_jsx(Progress,{percent:item.completion,size:\"small\",style:{width:100}})]})},item.key))})},plan.planId);};return/*#__PURE__*/_jsx(\"div\",{className:\"study-plan\",children:/*#__PURE__*/_jsxs(Tabs,{defaultActiveKey:\"current\",children:[/*#__PURE__*/_jsx(TabPane,{tab:\"\\u5F53\\u524D\\u5B66\\u4E60\\u8BA1\\u5212\",children:/*#__PURE__*/_jsx(Card,{title:\"\\u5F53\\u524D\\u8BA1\\u5212\\uFF08\".concat(plans.currentPlan.createTime,\"\\uFF09\"),extra:/*#__PURE__*/_jsx(Button,{type:\"primary\",onClick:()=>{// 模拟接收新计划\nconst newPlan=[{key:'1',date:moment().format('YYYY-MM-DD'),subject:'化学',content:'化学平衡',status:'进行中',completion:0}];updateCurrentPlan(newPlan);},children:\"\\u66F4\\u65B0\\u8BA1\\u5212\"}),children:/*#__PURE__*/_jsx(Table,{columns:columns,dataSource:plans.currentPlan.plans,pagination:false})})},\"current\"),/*#__PURE__*/_jsx(TabPane,{tab:\"\\u5386\\u53F2\\u5B66\\u4E60\\u8BA1\\u5212\",children:plans.historyPlans.length>0?plans.historyPlans.map(plan=>renderHistoryPlan(plan)):/*#__PURE__*/_jsx(Empty,{description:\"\\u6682\\u65E0\\u5386\\u53F2\\u8BA1\\u5212\"})},\"history\")]})});};export default StudyPlan;","map":{"version":3,"names":["React","useState","useEffect","Card","Table","Progress","Tabs","Empty","Tag","Timeline","Button","ClockCircleOutlined","CheckCircleOutlined","CloseCircleOutlined","moment","jsx","_jsx","jsxs","_jsxs","TabPane","StudyPlan","getStoredPlans","stored","localStorage","getItem","JSON","parse","currentPlan","planId","createTime","plans","key","date","subject","content","status","completion","historyPlans","setPlans","setItem","stringify","updateCurrentPlan","newPlan","updatedHistoryPlans","slice","Date","now","toString","format","columns","title","dataIndex","render","text","color","children","percent","size","renderHistoryPlan","plan","avgCompletion","reduce","acc","curr","length","style","marginBottom","concat","extra","toFixed","map","item","Item","dot","display","justifyContent","alignItems","width","className","defaultActiveKey","tab","type","onClick","dataSource","pagination","description"],"sources":["/home/gnahz/Documents/learning_msys/frontpages/src/pages/UserCenter/components/StudyPlan.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card, Table, Progress, Tabs, Empty, Tag, Timeline, Button } from 'antd';\r\nimport { ClockCircleOutlined, CheckCircleOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport './StudyPlan.less';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst StudyPlan = () => {\r\n  // 从 localStorage 获取当前计划和历史计划\r\n  const getStoredPlans = () => {\r\n    const stored = localStorage.getItem('studyPlans');\r\n    return stored ? JSON.parse(stored) : {\r\n      currentPlan: {\r\n        planId: '1',\r\n        createTime: '2024-03-20',\r\n        plans: [\r\n          {\r\n            key: '1',\r\n            date: '2024-03-20',\r\n            subject: '数学',\r\n            content: '函数与导数',\r\n            status: '已完成',\r\n            completion: 100,\r\n          },\r\n          {\r\n            key: '2',\r\n            date: '2024-03-21',\r\n            subject: '物理',\r\n            content: '力学基础',\r\n            status: '进行中',\r\n            completion: 60,\r\n          }\r\n        ]\r\n      },\r\n      historyPlans: []\r\n    };\r\n  };\r\n\r\n  const [plans, setPlans] = useState(getStoredPlans);\r\n\r\n  // 当计划更新时保存到 localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem('studyPlans', JSON.stringify(plans));\r\n  }, [plans]);\r\n\r\n  // 更新当前计划（模拟接收新计划）\r\n  const updateCurrentPlan = (newPlan) => {\r\n    // 将当前计划移到历史记录\r\n    const updatedHistoryPlans = [plans.currentPlan, ...plans.historyPlans].slice(0, 5);\r\n    \r\n    setPlans({\r\n      currentPlan: {\r\n        planId: Date.now().toString(),\r\n        createTime: moment().format('YYYY-MM-DD'),\r\n        plans: newPlan\r\n      },\r\n      historyPlans: updatedHistoryPlans\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: '日期',\r\n      dataIndex: 'date',\r\n      key: 'date',\r\n    },\r\n    {\r\n      title: '科目',\r\n      dataIndex: 'subject',\r\n      key: 'subject',\r\n      render: (text) => <Tag color=\"blue\">{text}</Tag>\r\n    },\r\n    {\r\n      title: '学习内容',\r\n      dataIndex: 'content',\r\n      key: 'content',\r\n    },\r\n    {\r\n      title: '状态',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      render: (status) => {\r\n        let color = status === '已完成' ? 'success' : status === '进行中' ? 'processing' : 'default';\r\n        return <Tag color={color}>{status}</Tag>;\r\n      }\r\n    },\r\n    {\r\n      title: '完成度',\r\n      dataIndex: 'completion',\r\n      key: 'completion',\r\n      render: (completion) => (\r\n        <Progress percent={completion} size=\"small\" />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  // 渲染历史计划\r\n  const renderHistoryPlan = (plan) => {\r\n    const avgCompletion = plan.plans.reduce((acc, curr) => acc + curr.completion, 0) / plan.plans.length;\r\n    \r\n    return (\r\n      <Card \r\n        key={plan.planId}\r\n        style={{ marginBottom: 16 }}\r\n        title={`创建日期：${plan.createTime}`}\r\n        extra={\r\n          <Tag color={avgCompletion === 100 ? 'success' : 'warning'}>\r\n            完成度：{avgCompletion.toFixed(1)}%\r\n          </Tag>\r\n        }\r\n      >\r\n        <Timeline>\r\n          {plan.plans.map(item => (\r\n            <Timeline.Item \r\n              key={item.key}\r\n              color={item.status === '已完成' ? 'green' : 'blue'}\r\n              dot={item.status === '已完成' ? <CheckCircleOutlined /> : <ClockCircleOutlined />}\r\n            >\r\n              <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <div>\r\n                  <Tag color=\"blue\">{item.subject}</Tag>\r\n                  {item.content}\r\n                </div>\r\n                <Progress percent={item.completion} size=\"small\" style={{ width: 100 }} />\r\n              </div>\r\n            </Timeline.Item>\r\n          ))}\r\n        </Timeline>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"study-plan\">\r\n      <Tabs defaultActiveKey=\"current\">\r\n        <TabPane tab=\"当前学习计划\" key=\"current\">\r\n          <Card \r\n            title={`当前计划（${plans.currentPlan.createTime}）`}\r\n            extra={\r\n              <Button \r\n                type=\"primary\"\r\n                onClick={() => {\r\n                  // 模拟接收新计划\r\n                  const newPlan = [\r\n                    {\r\n                      key: '1',\r\n                      date: moment().format('YYYY-MM-DD'),\r\n                      subject: '化学',\r\n                      content: '化学平衡',\r\n                      status: '进行中',\r\n                      completion: 0,\r\n                    }\r\n                  ];\r\n                  updateCurrentPlan(newPlan);\r\n                }}\r\n              >\r\n                更新计划\r\n              </Button>\r\n            }\r\n          >\r\n            <Table \r\n              columns={columns} \r\n              dataSource={plans.currentPlan.plans} \r\n              pagination={false}\r\n            />\r\n          </Card>\r\n        </TabPane>\r\n        \r\n        <TabPane tab=\"历史学习计划\" key=\"history\">\r\n          {plans.historyPlans.length > 0 ? (\r\n            plans.historyPlans.map(plan => renderHistoryPlan(plan))\r\n          ) : (\r\n            <Empty description=\"暂无历史计划\" />\r\n          )}\r\n        </TabPane>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudyPlan; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}